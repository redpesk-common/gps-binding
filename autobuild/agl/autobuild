#!/usr/bin/make -f
# Copyright (C) 2015-2020 IoT.bzh Company
# Author: "Romain Forlot" <romain.forlot@iot.bzh>
#
# $RP_BEGIN_LICENSE$
# Commercial License Usage
#  Licensees holding valid commercial IoT.bzh licenses may use this file in
#  accordance with the commercial license agreement provided with the
#  Software or, alternatively, in accordance with the terms contained in
#  a written agreement between you and The IoT.bzh Company. For licensing terms
#  and conditions see https://www.iot.bzh/terms-conditions. For further
#  information use the contact form at https://www.iot.bzh/contact.
#
# GNU General Public License Usage
#  Alternatively, this file may be used under the terms of the GNU General
#  Public license version 3. This license is as published by the Free Software
#  Foundation and appearing in the file LICENSE.GPLv3 included in the packaging
#  of this file. Please review the following information to ensure the GNU
#  General Public License requirements will be met
#  https://www.gnu.org/licenses/gpl-3.0.html.
# $RP_END_LICENSE$

THISFILE  := $(lastword $(MAKEFILE_LIST))
BUILD_DIR := $(abspath $(dir $(THISFILE))/../../build)
DEST      := ${BUILD_DIR}

.PHONY: all clean distclean configure build package help update configure-debug configure-coverage build-debug build-coverage package-test package-debug package-coverage package-debug package-debug-test package-coverage-test package-all package-all-1 package-all-2

all: help

help:
	@echo "List of targets available:"
	@echo ""
	@echo "- all"
	@echo "- clean"
	@echo "- distclean"
	@echo "- configure"
	@echo "- build: compilation, link and prepare files for package into a widget"
	@echo "- package: output a widget file '*.wgt'"
	@echo "- install: install in your ${CMAKE_INSTALL_DIR} directory"
	@echo ""
	@echo "Usage: ./autobuild/agl/autobuild package DEST=${HOME}/opt"
	@echo "Don't use your build dir as DEST as wgt file is generated at this location"

update: configure
	@cmake --build ${BUILD_DIR} --target autobuild

clean:
	@([ -d ${BUILD_DIR} ] && make -C ${BUILD_DIR} ${CLEAN_ARGS} clean) || echo Nothing to clean

distclean:
	@rm -rf ${BUILD_DIR}

configure:
	@[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}
	@[ -f ${BUILD_DIR}/Makefile ] || (cd ${BUILD_DIR} && cmake -DCMAKE_BUILD_TYPE=RELEASE ${CONFIGURE_ARGS} ..)

configure-test:
	@[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}
	@[ -f ${BUILD_DIR}/Makefile ] || (cd ${BUILD_DIR} && cmake -DCMAKE_BUILD_TYPE=RELEASE ${CONFIGURE_ARGS} ..)

configure-debug:
	@[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}
	@[ -f ${BUILD_DIR}/Makefile ] || (cd ${BUILD_DIR} && cmake -DCMAKE_BUILD_TYPE=DEBUG ${CONFIGURE_ARGS} ..)

configure-coverage:
	@[ -d ${BUILD_DIR} ] || mkdir -p ${BUILD_DIR}
	@[ -f ${BUILD_DIR}/Makefile ] || (cd ${BUILD_DIR} && cmake -DCMAKE_BUILD_TYPE=COVERAGE ${CONFIGURE_ARGS} ..)

build: configure
	@cmake --build ${BUILD_DIR} ${BUILD_ARGS} --target all

build-test: configure-test
	@cmake --build ${BUILD_DIR} ${BUILD_ARGS} --target all

build-debug: configure-debug
	@cmake --build ${BUILD_DIR} ${BUILD_ARGS} --target all

build-coverage: configure-coverage
	@cmake --build ${BUILD_DIR} ${BUILD_ARGS} --target all

package: build
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt

package-test: build-test
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target test_widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt

package-debug: build-debug
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt

package-coverage: build-coverage
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt

package-coverage-test: build-coverage
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target test_widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt


package-debug-test: build-debug
	@mkdir -p ${BUILD_DIR}/$@/bin
	@mkdir -p ${BUILD_DIR}/$@/etc
	@mkdir -p ${BUILD_DIR}/$@/lib
	@mkdir -p ${BUILD_DIR}/$@/htdocs
	@mkdir -p ${BUILD_DIR}/$@/var
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target widget
	@cmake --build ${BUILD_DIR} ${PACKAGE_ARGS} --target test_widget
	@if [ "${DEST}" != "${BUILD_DIR}" ]; then \
		mkdir -p ${DEST} && cp ${BUILD_DIR}/*.wgt ${DEST}; \
	fi
	@rm ${BUILD_DIR}/Makefile
	@rm ${BUILD_DIR}/CMakeCache.txt

package-all: package package-test package-coverage package-debug

install: build
	@cmake --build ${BUILD_DIR} ${INSTALL_ARGS} --target install
